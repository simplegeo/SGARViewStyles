//
//  SG3DOverlayEnvironment.h
//  SGAREnvironment
//
//  Copyright (c) 2009-2010, SimpleGeo
//  All rights reserved.
//
//  Redistribution and use in source and binary forms, with or without 
//  modification, are permitted provided that the following conditions are met:
//
//  Redistributions of source code must retain the above copyright notice, 
//  this list of conditions and the following disclaimer. Redistributions 
//  in binary form must reproduce the above copyright notice, this list of
//  conditions and the following disclaimer in the documentation and/or 
//  other materials provided with the distribution.
//  
//  Neither the name of the SimpleGeo nor the names of its contributors may
//  be used to endorse or promote products derived from this software 
//  without specific prior written permission.
//   
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
//  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
//  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
//  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS 
//  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
//  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE 
//  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
//  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, 
//  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
//  Created by Derek Smith.
//

#import "SG3DOverlayView.h"
#import "AccelerometerFilter.h"

@class SGAnnotationView;
@class SGARView;

/*!
* @class SG3DOverlayEnvironment
* @abstract This class is in charge of drawing all of the OpenGL components while producing
* the correct callback notifications for touch events generated by
* @link //simplegeo/ooc/cl/SG3DOverlayView SG3DOverlayView @/link.
* @discussion While the @link //simplegeo/ooc/cl/SG3DOverlayView SG3DOverlayView @/link is in charge
* of initializing the OpenGL environment, this class is responsible for "setting the stage". All operations
* on the projection and modelview matrices are done with @link drawView: drawView: @/link and
* @link setupView: setupView: @/link.
*
* Within the @link drawView: drawView: @/link method, the values from the accelerometer and the location
* manager are used to generate the proper matrices that will be applied to the modelview matrix.
* The accelerometer values are passed through a lowpass filter in order to generate the proper rotations
* matrices. The device, for the most part, will always be centered at the origin in the OpenGL environment.
* The floating @link //simplegeo/ooc/cl/SGAnnotationView SGAnnotationViews @/link apply their own matrix
* transformations in order to be display in the 3D world properly.
*/
@interface SG3DOverlayEnvironment : NSObject <SG3DOverlayViewDelegate, UIAccelerometerDelegate, CLLocationManagerDelegate> {
    
    CGFloat fovy;
    
    NSMutableArray* responders;
    CLLocationManager* locationManager;
    SGARView* arView;
    
    CGFloat cameraStepDistance;
    
    @private
    LowpassFilter* filter;
    
    // These are determined using a combination of the compass
    // signal and the accelormeter signals.
    double pitch;
    double yaw;
    double roll;
    double heading;
    
    CLLocation* currentLocation;
    
    NSMutableArray* annotationViews;
    NSMutableArray* containers;
    
    UIView* inspectedView;
    
    SGAnnotationView* selectedView;
    
    CGFloat cameraXCoord;
    CGFloat cameraZCoord;
    
    GLfloat* modelMatrix;
    GLfloat* projectionMatrix;
    GLint* viewport;
}

/*!
* @property fovy
* @abstract Specifies the field of view angle, in degrees, in the y direction.
*/
@property (nonatomic, assign) CGFloat fovy;

/*!
* @property cameraStepDistance
* @abstract The amount of meters to step in a direction when
* the camera is asked to move.
* @discussion At this time, the camera is only asked to move
* when either the @link @link //simplegeo/ooc/cl/SG3DOverlayEnvironment SG3DOverlayEnvrionment @/link
* generates a pinch, pull or double tap control event. See @link //simplegeo/ooc/intf/SG3DOverlayViewDelegate SG3DOverlayViewDelegate @/link.
* Also, @link //simplegeo/ooc/instp/SGARView/enableWalking enableWalking @/link must be set to YES in order
* for the camera distance to be applied to the environment when the proper control signals are generated.
*/
@property (nonatomic, assign) CGFloat cameraStepDistance;

/*!
* @property responders
* @abstract Contains all the @link //simplegeo/ooc/intf/SGARResponder SGARResponders @/link that
* have been added via @link //simplegeo/ooc/instm/SGARView/addResponder: addResponder: @/link.
*/
@property (nonatomic, readonly) NSMutableArray* responders;

/*!
* @property locationManager
* @abstract The CLLocationManager to which this class adds itself as a delegate.
*/
@property (nonatomic, readonly) CLLocationManager* locationManager;

/*!
* @property arView
* @abstract The @link //simplegeo/ooc/SGARView SGARView @/link that this class
* is required to render the OpenGL environment for.
*/
@property (nonatomic, retain) SGARView* arView;

/*!
* @method addAnnotationViews:
* @abstract ￼Adds an array of @link //simplegeo/ooc/cl/SGAnnotationView SGAnnotationViews @/link
* to be rendered in the OpenGL environment.
* @discussion ￼This method is invoked by @link //simplegeo/ooc/instm/SGARView/reloadData reloadData @/link.
* @param views￼
*/
- (void) addAnnotationViews:(NSArray*)views;

/*!
* @method addAnnotationView:
* @abstract ￼Add a @link //simplegeo/ooc/cl/SGAnnotationView SGAnnotationView @/link
* to the list of view that will be rendered in the OpenGL environment.
* @param views
*/
- (void) addAnnotationView:(SGAnnotationView*)view;

@end
