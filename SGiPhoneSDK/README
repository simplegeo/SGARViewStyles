SimpleGeo iPhone SDK v0.1.8

================================================================================
ABSTRACT:

Interfaces with the SimpleGeo API while providing an augmented reality environment.

================================================================================
USAGE:

1. Read the documentation and look at the sample projects (Sample projects will soon follow).
2. Add /path/to/SG-SDK/Headers to the "Header Search Paths" setting.
3. Add /path/to/SG-SDK/$(PLATFORM_NAME) to "Library Search Paths" setting.
3. Add the following frameworks: OpenGLES, MapKit, CoreLocation, CoreGraphics, Security, QuartzCore
and Foundation.
4. Goto your target's info and add "-all_load -ObjC -l SGiPhoneSDK" to the "Other Linker Flags" setting under the Build tag. This will
inform the linker to load the categories from the static library.
5. Import SimpleGeo.h in your pre-compiled header file or wherever you plan on accessing the library.

================================================================================
BUILD REQUIREMENTS:

iPhone SDK 3.1

Frameworks
- CoreLocation
- Foundation
- MapKit
- OpenGLES
- CoreGraphics
- UIKit

================================================================================
PACKAGING LIST:

Documentation
All the HTML files generated by HeaderDoc.

	SGiPhoneSDK.html
	The table of contents for the entire documentation structure.

libSGiPhoneSDK.a
The static library built for the iPhone Device.
	
libSGiPhoneSDK-sim.a
The static library built for the iPhone Simulator.

Headers
	
	SGAlbum.h
	Defines the protocol that allows a NSObject to be displayed
	in SGCoverFlowView.
	
	SGAnnotationView.h
	Defines a subclass of UIView that displays SGAnnotations in the
	SGARView.
	
	SGAnnotationViewContainer.h
	Defines a subclass of UIView that contains a set of SGRecordAnnoationViews.
	
	SGARNavigationViewController.h
	Defines a subclass of UIImagePickerViewController that displays the SGARView.
	
	SGARResponder.h
	Defines the protocol that receives gestures from the SGARView.
	
	SGARView.h
	Defines a subclass of UIView that renders SGAnnotations in an augmented
	reality environment.
	
	SGAuthorization.h
	Defines a protocol that wraps an HTTP request sent by SGLocationService
	with the proper authentication protocol.
	
	SGCoverFlowView.h
	Defines a subclass of UIView that displays SGAlbums in an Apple style
	cover flow.
	
	SGEnvironmentConstants.h
	Defines constants that are used in the augmented reality environment.
	
	SGGeoJSONCodec.h
	Defines a GeoJSON coder/decoder.
	
	SGLayer.h
	Defines an object that can update and retrieve SGRecordAnnotations within
	a given layer.
	
	SGLayerMapView.h
	Defines a subclass of MKMapView that will retrieve SGRecordAnnotations
	when the map position is updated.
	
	SGLocationService.h
	Defines the Obj-C interface for interacting with the SimpleGeo API.
	
	SGLocationTypes.h
	Defines structures that are used by SGLocationService.
	
	SGManagedRecord.h
	Defines a subclass of NSManagedObject that implements the SGRecordAnnotation
	protocol.
	
	SGOAuth.h
	Defines a two-legged, OAuth wrapper class used by SGLocationService.
	
	SGRadar.h
	Defines a subclass of UIView that displays SGAnnotationViews in a radar-ish
	manner.
	
	SGRecord.h
	Defines a class that represents a SimpleGeo record.
	
	SGRecordAnnotation.h
	Defines a protocol that represents a SimpleGeo record.
	
	SGSimpleGeo.h
	Contains all the header files for the SDK.
    
    SGGeoJSONNSDictionary.h
    A category to help access GeoJSON keys.
    
    SGGeoJSONNSArray.h
    A category to help access GeoJSON keys.
 
Images
The default images used in the SDK. Feel free to override these with your own.
They aren't very pretty at the moment.
	
	SGBluePin.png
	A blue pin.
	
	SGBottomInspectorBackground.png
	The bottom image of a non-customizable SGAnnotationView.
	
	SGCloseButton.png
	The close button image of a non-customizable SGAnnotationView.
	
	SGDefaultContainer.png
	The default SGAnnotationViewContainer image.
	
	SGDefaultProfilePicture.png
	The default profile picture used in SGAnnotationView.
	
	SGDefaultRadarCurrentLocation.png
	The image that represents the devices current location on the SGRadar.
	
	SGDefaultRadarTargetImage.png
	The default target image for SGRecordAnnotation on the SGRadar.
	
	SGGlassTargetBackground.png
	The default target background for SGAnnotationView.
	
	SGMiddleInspectorBackground.png
	The middle, stretchable portion of a non-customizable SGAnnotationView.
	
	SGRedPin.png
	A red pin.
	
	SGTopInspectorBackground.png
	The top image of a non-customizable SGAnnotationView.
	
================================================================================
CHANGES FROM PREVIOUS VERSIONS:

Version 0.3.0
- Upgraded SGLocationService to use version 0.1 of the SimpleGeo API
- Models have been updated to reflect the new GeoJSON format returned
from SimpleGeo queries
- Added a new NSDictionary and NSArray category to help access key specific
to GeoJSON format
- Replaced updateRecordWithGeoJSONDictionary: with updateRecordWithGeoJSONObject:
- Removed userDefinedProperties from SGRecordAnnotation and replaced it with
properties
- Reworked the SGGeoJSONEncoder

Version 0.2.3
- Updated the default container images.
- Updated SGRadar to present target images that are on the border of
the radar. 
- Update SGLayerMapView to load more records based on a time interval.
- Added media as a filter type.

Version 0.2.1
- Allow filtering by types in nearby requests.

Version 0.2.0
- Added reverse geocoding.
- Implemented the new SimpleGeo endpoints that allow multiple records to be
added and retrieved.

Version 0.1.9
- SGLayer objects will now update records as they are recieved from the SGLocaitonService.
- SGRecord defines a new property that stores user defined properties.
- SGOAuth objects can be restored from a save point.
- Nearby searchs can be done using a Geohash or a lat/lon coordinate paired with a radius.

Version 0.1.8
- First version.

================================================================================
Copyright (C) 2010 SimpleGeo Inc. All rights reserved.